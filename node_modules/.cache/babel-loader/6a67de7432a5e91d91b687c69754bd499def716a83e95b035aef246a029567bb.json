{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport '../styles/Questions.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialScore = 10;\nconst points = {\n  hard: 3,\n  medium: 2,\n  easy: 1\n};\nclass Questions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      indexQuestion: 0,\n      amountAssert: 0,\n      arrayQuestions: [],\n      arrayAnswers: [],\n      isLoading: true,\n      correctAnswer: '',\n      correct: false,\n      incorrect: false,\n      enabledNextButton: false\n    };\n    this.fetchQuestions = async () => {\n      const {\n        history\n      } = this.props;\n      const token = localStorage.getItem('token');\n      const data = await fetchQuestionsApi(token);\n      const NUMBER = 3;\n      if (data.response_code === NUMBER) {\n        localStorage.removeItem('token');\n        history.push('/');\n      } else {\n        this.setState({\n          isLoading: false,\n          arrayQuestions: data.results\n        }, this.shuffleAnswers);\n      }\n    };\n    this.handleButtonOptions = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        amountAssert\n      } = this.state;\n      const isCorrect = target.getAttribute('data-testid').includes('correct-answer');\n      if (isCorrect) {\n        this.setState({\n          correct: 'correct',\n          incorrect: 'incorrect',\n          enabledNextButton: true,\n          amountAssert: amountAssert + 1\n        });\n      } else {\n        this.setState({\n          correct: 'correct',\n          incorrect: 'incorrect',\n          enabledNextButton: true\n        });\n      }\n    };\n    this.countScore = () => {\n      const {\n        arrayQuestions,\n        indexQuestion\n      } = this.state;\n      const {\n        difficulty\n      } = arrayQuestions[indexQuestion];\n      const score = initialScore + timer * points[difficulty];\n      dispatch(userScore(score));\n    };\n    this.shuffleAnswers = () => {\n      const {\n        arrayQuestions,\n        indexQuestion\n      } = this.state;\n      const NUMBER = 0.5;\n      const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers, arrayQuestions[indexQuestion].correct_answer];\n      allAnswers.sort(() => Math.random() - NUMBER);\n      this.setState({\n        arrayAnswers: allAnswers,\n        correctAnswer: arrayQuestions[indexQuestion].correct_answer\n      });\n    };\n    this.handeButtonNext = () => {\n      const {\n        indexQuestion\n      } = this.state;\n      const {\n        history\n      } = this.props;\n      const NUMBER = 4;\n      this.setState({\n        indexQuestion: indexQuestion + 1,\n        correct: '',\n        incorrect: '',\n        enabledNextButton: false\n      });\n      if (indexQuestion >= NUMBER) {\n        history.push('/feedback');\n      } else {\n        this.fetchQuestions();\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n  render() {\n    const {\n      indexQuestion,\n      isLoading,\n      arrayQuestions,\n      enabledNextButton,\n      arrayAnswers,\n      correctAnswer,\n      correct,\n      incorrect\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 24\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-category\",\n          children: arrayQuestions[indexQuestion].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-text\",\n          children: arrayQuestions[indexQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: arrayAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: this.handleButtonOptions,\n            className: answer === correctAnswer ? `${correct}` : `${incorrect}`,\n            \"data-testid\": answer === correctAnswer ? 'correct-answer' : `wrong-answer-${index}`,\n            children: answer\n          }, answer, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), enabledNextButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handeButtonNext,\n        \"data-testid\": \"btn-next\",\n        type: \"button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuestions.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nexport default Questions;","map":{"version":3,"names":["React","Component","PropTypes","fetchQuestionsApi","initialScore","points","hard","medium","easy","Questions","state","indexQuestion","amountAssert","arrayQuestions","arrayAnswers","isLoading","correctAnswer","correct","incorrect","enabledNextButton","fetchQuestions","history","props","token","localStorage","getItem","data","NUMBER","response_code","removeItem","push","setState","results","shuffleAnswers","handleButtonOptions","target","isCorrect","getAttribute","includes","countScore","difficulty","score","timer","dispatch","userScore","allAnswers","incorrect_answers","correct_answer","sort","Math","random","handeButtonNext","componentDidMount","render","category","question","map","answer","index","propTypes","shape","func","isRequired"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport '../styles/Questions.css';\n\nconst initialScore = 10;\nconst points = {\n  hard: 3,\n  medium: 2,\n  easy: 1,\n};\n\nclass Questions extends Component {\n  state = {\n    indexQuestion: 0,\n    amountAssert: 0,\n    arrayQuestions: [],\n    arrayAnswers: [],\n    isLoading: true,\n    correctAnswer: '',\n    correct: false,\n    incorrect: false,\n    enabledNextButton: false,\n  };\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  fetchQuestions = async () => {\n    const { history } = this.props;\n    const token = localStorage.getItem('token');\n    const data = await fetchQuestionsApi(token);\n    const NUMBER = 3;\n\n    if (data.response_code === NUMBER) {\n      localStorage.removeItem('token');\n      history.push('/');\n    } else {\n      this.setState({\n        isLoading: false,\n        arrayQuestions: data.results,\n      }, this.shuffleAnswers);\n    }\n  };\n\n  handleButtonOptions = ({ target }) => {\n    const { amountAssert } = this.state;\n\n    const isCorrect = target.getAttribute('data-testid').includes('correct-answer');\n\n    if (isCorrect) {\n      this.setState({\n        correct: 'correct',\n        incorrect: 'incorrect',\n        enabledNextButton: true,\n        amountAssert: amountAssert + 1,\n      });\n    } else {\n      this.setState({\n        correct: 'correct',\n        incorrect: 'incorrect',\n        enabledNextButton: true,\n      });\n    }\n  };\n\n  countScore = () => {\n    const { arrayQuestions, indexQuestion } = this.state;\n    const { difficulty } = arrayQuestions[indexQuestion];\n    const score = initialScore + (timer * points[difficulty]);\n    dispatch(userScore(score));\n  };\n\n  shuffleAnswers = () => {\n    const { arrayQuestions, indexQuestion } = this.state;\n    const NUMBER = 0.5;\n    const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers,\n      arrayQuestions[indexQuestion].correct_answer];\n    allAnswers.sort(() => Math.random() - NUMBER);\n    this.setState({\n      arrayAnswers: allAnswers,\n      correctAnswer: arrayQuestions[indexQuestion].correct_answer,\n    });\n  };\n\n  handeButtonNext = () => {\n    const { indexQuestion } = this.state;\n    const { history } = this.props;\n    const NUMBER = 4;\n    this.setState({\n      indexQuestion: indexQuestion + 1,\n      correct: '',\n      incorrect: '',\n      enabledNextButton: false,\n    });\n\n    if (indexQuestion >= NUMBER) {\n      history.push('/feedback');\n    } else {\n      this.fetchQuestions();\n    }\n  };\n\n  render() {\n    const { indexQuestion, isLoading, arrayQuestions, enabledNextButton,\n      arrayAnswers, correctAnswer, correct, incorrect } = this.state;\n    return (\n      <div>\n        {/* { (isLoading) ? <p>Carregando...</p>\n          : <p>{arrayQuestions[indexQuestion].question }</p> } */}\n\n        { isLoading && <p>Carregando...</p> }\n        { !isLoading && (\n          <div>\n            <p data-testid=\"question-category\">\n              {arrayQuestions[indexQuestion].category }\n            </p>\n            <p data-testid=\"question-text\">{arrayQuestions[indexQuestion].question }</p>\n            <div data-testid=\"answer-options\">\n              {\n                arrayAnswers.map((answer, index) => (\n                  <button\n                    type=\"button\"\n                    onClick={ this.handleButtonOptions }\n                    className={ answer === correctAnswer ? `${correct}`\n                      : `${incorrect}` }\n                    data-testid={ answer === correctAnswer ? 'correct-answer'\n                      : `wrong-answer-${index}` }\n                    key={ answer }\n                  >\n                    {answer}\n                  </button>))\n              }\n            </div>\n          </div>) }\n        {\n          enabledNextButton && (\n            <button\n              onClick={ this.handeButtonNext }\n              data-testid=\"btn-next\"\n              type=\"button\"\n            >\n              Next\n\n            </button>)\n        }\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default Questions;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}