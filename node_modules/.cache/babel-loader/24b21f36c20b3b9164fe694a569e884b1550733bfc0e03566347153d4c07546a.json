{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MD5 } from 'crypto-js';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { addPlayer, resetScore } from '../redux/actions/gameAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.handleRestart = () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      dispatch(resetScore());\n      history.push('/');\n    };\n  }\n  // handleButtonRanking = () => {\n  //   const { history } = this.props;\n  //   history.push('/ranking');\n  // };\n\n  render() {\n    const {\n      assertions,\n      score,\n      name,\n      gravatarEmail,\n      dispatch\n    } = this.props;\n    const NUMBER = 3;\n    if (!JSON.parse(localStorage.getItem('ranking'))) {\n      localStorage.setItem('ranking', JSON.stringify([]));\n    }\n    const currentStorage = JSON.parse(localStorage.getItem('ranking'));\n    const savedPlayer = {\n      name,\n      score,\n      gravatarEmail: `https://www.gravatar.com/avatar/${MD5(gravatarEmail).toString()}`,\n      assertions\n    };\n    const listPlayers = [...currentStorage, savedPlayer];\n    const lisPlayersOrder = listPlayers.sort((a, b) => b.score - a.score);\n    localStorage.setItem('ranking', JSON.stringify(lisPlayersOrder));\n    dispatch(addPlayer(savedPlayer));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-total-score\",\n        children: score\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-total-question\",\n        children: assertions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), assertions < NUMBER ? /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        children: \"Could be better...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        children: \"Well Done!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        \"data-testid\": \"btn-play-again\",\n        type: \"button\",\n        onClick: this.handleRestart,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/ranking\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": \"btn-ranking\",\n          onClick: this.handleButtonRanking,\n          type: \"button\",\n          children: \"Ranking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n}\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func\n  }),\n  dispatch: PropTypes.func,\n  assertions: PropTypes.number,\n  score: PropTypes.number,\n  gravatarEmail: PropTypes.string,\n  name: PropTypes.string\n}.isRequired;\nconst mapStateToProps = state => ({\n  ...state.player\n});\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","Component","connect","PropTypes","MD5","Link","Header","addPlayer","resetScore","Feedback","handleRestart","history","dispatch","props","push","render","assertions","score","name","gravatarEmail","NUMBER","JSON","parse","localStorage","getItem","setItem","stringify","currentStorage","savedPlayer","toString","listPlayers","lisPlayersOrder","sort","a","b","handleButtonRanking","propTypes","shape","func","number","string","isRequired","mapStateToProps","state","player"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/pages/Feedback.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { MD5 } from 'crypto-js';\nimport { Link } from 'react-router-dom';\nimport Header from '../components/Header';\nimport { addPlayer, resetScore } from '../redux/actions/gameAction';\n\nclass Feedback extends Component {\n  handleRestart = () => {\n    const { history, dispatch } = this.props;\n    dispatch(resetScore());\n    history.push('/');\n  };\n\n  // handleButtonRanking = () => {\n  //   const { history } = this.props;\n  //   history.push('/ranking');\n  // };\n\n  render() {\n    const { assertions, score, name, gravatarEmail, dispatch } = this.props;\n    const NUMBER = 3;\n\n    if (!JSON.parse(localStorage.getItem('ranking'))) {\n      localStorage.setItem('ranking', JSON.stringify([]));\n    }\n\n    const currentStorage = JSON.parse(localStorage.getItem('ranking'));\n\n    const savedPlayer = {\n      name,\n      score,\n      gravatarEmail: `https://www.gravatar.com/avatar/${MD5(gravatarEmail).toString()}`,\n      assertions,\n    };\n\n    const listPlayers = [...currentStorage, savedPlayer];\n    const lisPlayersOrder = listPlayers.sort((a, b) => b.score - a.score);\n    localStorage.setItem('ranking', JSON.stringify(lisPlayersOrder));\n    dispatch(addPlayer(savedPlayer));\n\n    return (\n      <div>\n        <Header />\n        <p data-testid=\"feedback-total-score\">{ score }</p>\n        <p data-testid=\"feedback-total-question\">{ assertions }</p>\n        { (assertions < NUMBER)\n          ? <p data-testid=\"feedback-text\">Could be better...</p>\n          : <p data-testid=\"feedback-text\">Well Done!</p> }\n        <button\n          data-testid=\"btn-play-again\"\n          type=\"button\"\n          onClick={ this.handleRestart }\n        >\n          Play Again\n        </button>\n\n        <Link to=\"/ranking\">\n          <button\n            data-testid=\"btn-ranking\"\n            onClick={ this.handleButtonRanking }\n            type=\"button\"\n          >\n            Ranking\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n  dispatch: PropTypes.func,\n  assertions: PropTypes.number,\n  score: PropTypes.number,\n  gravatarEmail: PropTypes.string,\n  name: PropTypes.string,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  ...state.player,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}