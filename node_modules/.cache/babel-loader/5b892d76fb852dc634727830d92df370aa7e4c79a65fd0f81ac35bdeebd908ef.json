{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport '../styles/Questions.css';\nimport { userScore } from '../redux/actions/gameAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialScore = 10;\nconst points = {\n  hard: 3,\n  medium: 2,\n  easy: 1\n};\nclass Questions extends Component {\n  constructor() {\n    super(...arguments);\n    this.interval = null;\n    this.state = {\n      indexQuestion: 0,\n      amountAssert: 0,\n      arrayQuestions: [],\n      arrayAnswers: [],\n      isLoading: true,\n      correctAnswer: '',\n      correct: false,\n      incorrect: false,\n      enabledNextButton: false,\n      enabledAnswersButton: true,\n      timer: 30\n    };\n    this.fetchQuestions = async () => {\n      const {\n        history\n      } = this.props;\n      const token = localStorage.getItem('token');\n      const data = await fetchQuestionsApi(token);\n      const NUMBER = 3;\n      if (data.response_code === NUMBER) {\n        localStorage.removeItem('token');\n        history.push('/');\n      } else {\n        this.setState({\n          isLoading: false,\n          arrayQuestions: data.results\n        }, this.shuffleAnswers);\n      }\n    };\n    this.initTimer = () => {\n      const RESTART = 1000;\n      this.interval = setInterval(() => {\n        let {\n          timer\n        } = this.state;\n        if (timer > 0) {\n          console.log(timer);\n          this.setState({\n            timer: timer -= 1\n          });\n        } else {\n          clearInterval(this.interval);\n          this.setState({\n            enabledAnswersButton: false\n          });\n        }\n      }, RESTART);\n    };\n    this.handleButtonOptions = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        amountAssert\n      } = this.state;\n      const isCorrect = target.getAttribute('data-testid').includes('correct-answer');\n      if (isCorrect) {\n        this.setState({\n          correct: 'correct',\n          incorrect: 'incorrect',\n          enabledNextButton: true,\n          amountAssert: amountAssert + 1\n        }, this.countScore());\n      } else {\n        this.setState({\n          correct: 'correct',\n          incorrect: 'incorrect',\n          enabledNextButton: true\n        });\n      }\n    };\n    this.countScore = () => {\n      const {\n        arrayQuestions,\n        indexQuestion,\n        timer\n      } = this.state;\n      const {\n        dispatch\n      } = this.props;\n      const {\n        difficulty\n      } = arrayQuestions[indexQuestion];\n      const score = initialScore + (timer + points[difficulty]);\n      dispatch(userScore(score));\n    };\n    this.shuffleAnswers = () => {\n      const {\n        arrayQuestions,\n        indexQuestion\n      } = this.state;\n      const NUMBER = 0.5;\n      const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers, arrayQuestions[indexQuestion].correct_answer];\n      allAnswers.sort(() => Math.random() - NUMBER);\n      this.setState({\n        arrayAnswers: allAnswers,\n        correctAnswer: arrayQuestions[indexQuestion].correct_answer\n      });\n    };\n    this.handeButtonNext = () => {\n      const {\n        indexQuestion\n      } = this.state;\n      const {\n        history\n      } = this.props;\n      const NUMBER = 4;\n      this.setState({\n        indexQuestion: indexQuestion + 1,\n        correct: '',\n        incorrect: '',\n        enabledNextButton: false\n      });\n      if (indexQuestion >= NUMBER) {\n        history.push('/feedback');\n      } else {\n        this.fetchQuestions();\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n  render() {\n    const {\n      indexQuestion,\n      isLoading,\n      arrayQuestions,\n      enabledNextButton,\n      arrayAnswers,\n      correctAnswer,\n      correct,\n      incorrect,\n      enabledAnswersButton\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 24\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-category\",\n          children: arrayQuestions[indexQuestion].category\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"question-text\",\n          children: arrayQuestions[indexQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: arrayAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: enabledAnswersButton,\n            onClick: this.handleButtonOptions,\n            className: answer === correctAnswer ? `${correct}` : `${incorrect}`,\n            \"data-testid\": answer === correctAnswer ? 'correct-answer' : `wrong-answer-${index}`,\n            children: answer\n          }, answer, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this), enabledNextButton && /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handeButtonNext,\n        \"data-testid\": \"btn-next\",\n        type: \"button\",\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuestions.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nexport default connect()(Questions);","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchQuestionsApi","userScore","initialScore","points","hard","medium","easy","Questions","interval","state","indexQuestion","amountAssert","arrayQuestions","arrayAnswers","isLoading","correctAnswer","correct","incorrect","enabledNextButton","enabledAnswersButton","timer","fetchQuestions","history","props","token","localStorage","getItem","data","NUMBER","response_code","removeItem","push","setState","results","shuffleAnswers","initTimer","RESTART","setInterval","console","log","clearInterval","handleButtonOptions","target","isCorrect","getAttribute","includes","countScore","dispatch","difficulty","score","allAnswers","incorrect_answers","correct_answer","sort","Math","random","handeButtonNext","componentDidMount","render","category","question","map","answer","index","propTypes","func","shape","isRequired"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport '../styles/Questions.css';\nimport { userScore } from '../redux/actions/gameAction';\n\nconst initialScore = 10;\nconst points = {\n  hard: 3,\n  medium: 2,\n  easy: 1,\n};\n\nclass Questions extends Component {\n  interval = null;\n\n  state = {\n    indexQuestion: 0,\n    amountAssert: 0,\n    arrayQuestions: [],\n    arrayAnswers: [],\n    isLoading: true,\n    correctAnswer: '',\n    correct: false,\n    incorrect: false,\n    enabledNextButton: false,\n    enabledAnswersButton: true,\n    timer: 30,\n  };\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  fetchQuestions = async () => {\n    const { history } = this.props;\n    const token = localStorage.getItem('token');\n    const data = await fetchQuestionsApi(token);\n    const NUMBER = 3;\n\n    if (data.response_code === NUMBER) {\n      localStorage.removeItem('token');\n      history.push('/');\n    } else {\n      this.setState({\n        isLoading: false,\n        arrayQuestions: data.results,\n      }, this.shuffleAnswers);\n    }\n  };\n\n  initTimer = () => {\n    const RESTART = 1000;\n    this.interval = setInterval(() => {\n      let { timer } = this.state;\n      if (timer > 0) {\n        console.log(timer);\n        this.setState({\n          timer: timer -= 1,\n        });\n      } else {\n        clearInterval(this.interval);\n        this.setState({\n          enabledAnswersButton: false,\n        });\n      }\n    }, RESTART);\n  };\n\n  handleButtonOptions = ({ target }) => {\n    const { amountAssert } = this.state;\n\n    const isCorrect = target.getAttribute('data-testid').includes('correct-answer');\n\n    if (isCorrect) {\n      this.setState({\n        correct: 'correct',\n        incorrect: 'incorrect',\n        enabledNextButton: true,\n        amountAssert: amountAssert + 1,\n      }, this.countScore());\n    } else {\n      this.setState({\n        correct: 'correct',\n        incorrect: 'incorrect',\n        enabledNextButton: true,\n      });\n    }\n  };\n\n  countScore = () => {\n    const { arrayQuestions, indexQuestion, timer } = this.state;\n    const { dispatch } = this.props;\n    const { difficulty } = arrayQuestions[indexQuestion];\n    const score = initialScore + (timer + points[difficulty]);\n    dispatch(userScore(score));\n  };\n\n  shuffleAnswers = () => {\n    const { arrayQuestions, indexQuestion } = this.state;\n    const NUMBER = 0.5;\n    const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers,\n      arrayQuestions[indexQuestion].correct_answer];\n    allAnswers.sort(() => Math.random() - NUMBER);\n    this.setState({\n      arrayAnswers: allAnswers,\n      correctAnswer: arrayQuestions[indexQuestion].correct_answer,\n    });\n  };\n\n  handeButtonNext = () => {\n    const { indexQuestion } = this.state;\n    const { history } = this.props;\n    const NUMBER = 4;\n    this.setState({\n      indexQuestion: indexQuestion + 1,\n      correct: '',\n      incorrect: '',\n      enabledNextButton: false,\n    });\n\n    if (indexQuestion >= NUMBER) {\n      history.push('/feedback');\n    } else {\n      this.fetchQuestions();\n    }\n  };\n\n  render() {\n    const { indexQuestion, isLoading, arrayQuestions, enabledNextButton,\n      arrayAnswers, correctAnswer, correct, incorrect,\n      enabledAnswersButton } = this.state;\n    return (\n      <div>\n        {/* { (isLoading) ? <p>Carregando...</p>\n          : <p>{arrayQuestions[indexQuestion].question }</p> } */}\n\n        { isLoading && <p>Carregando...</p> }\n        { !isLoading && (\n          <div>\n            <p data-testid=\"question-category\">\n              {arrayQuestions[indexQuestion].category }\n            </p>\n            <p data-testid=\"question-text\">{arrayQuestions[indexQuestion].question }</p>\n            <div data-testid=\"answer-options\">\n              {\n                arrayAnswers.map((answer, index) => (\n                  <button\n                    type=\"button\"\n                    disabled={ enabledAnswersButton }\n                    onClick={ this.handleButtonOptions }\n                    className={ answer === correctAnswer ? `${correct}`\n                      : `${incorrect}` }\n                    data-testid={ answer === correctAnswer ? 'correct-answer'\n                      : `wrong-answer-${index}` }\n                    key={ answer }\n                  >\n                    {answer}\n                  </button>))\n              }\n            </div>\n          </div>) }\n        {\n          enabledNextButton && (\n            <button\n              onClick={ this.handeButtonNext }\n              data-testid=\"btn-next\"\n              type=\"button\"\n            >\n              Next\n\n            </button>)\n        }\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect()(Questions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}