{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport '../styles/Questions.css';\nimport { amountHits, userScore } from '../redux/actions/gameAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet intervalId = 0;\nconst initialScore = 10;\nconst points = {\n  hard: 3,\n  medium: 2,\n  easy: 1\n};\nclass Questions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      indexQuestion: 0,\n      amountAssert: 0,\n      arrayQuestions: [],\n      arrayAnswers: [],\n      isLoading: true,\n      correctAnswer: '',\n      correct: false,\n      incorrect: false,\n      enabledNextButton: false,\n      enabledAnswersButton: true,\n      timer: 30\n    };\n    this.timerDisplay = () => {\n      const RESTART = 1000;\n      intervalId = setInterval(() => {\n        let {\n          timer\n        } = this.state;\n        if (timer > 0) {\n          this.setState({\n            timer: timer -= 1\n          });\n        } else {\n          clearInterval(intervalId);\n          this.setState({\n            enabledAnswersButton: false\n          });\n        }\n      }, RESTART);\n    };\n    this.fetchQuestions = async () => {\n      this.timerDisplay();\n      const {\n        history\n      } = this.props;\n      const token = localStorage.getItem('token');\n      const data = await fetchQuestionsApi(token);\n      const NUMBER = 3;\n      if (data.response_code === NUMBER) {\n        localStorage.removeItem('token');\n        history.push('/');\n      } else {\n        this.setState({\n          isLoading: false,\n          arrayQuestions: data.results\n        }, this.shuffleAnswers);\n      }\n    };\n    this.handleButtonOptions = _ref => {\n      let {\n        target\n      } = _ref;\n      const {\n        amountAssert\n      } = this.state;\n      const isCorrect = target.getAttribute('data-testid').includes('correct-answer');\n      if (isCorrect) {\n        this.setState({\n          correct: 'correct',\n          incorrect: 'incorrect',\n          enabledNextButton: true,\n          amountAssert: amountAssert + 1\n        }, this.countScore());\n      } else {\n        this.setState({\n          correct: 'correct',\n          incorrect: 'incorrect',\n          enabledNextButton: true\n        });\n      }\n      clearInterval(intervalId);\n    };\n    this.countScore = () => {\n      const {\n        arrayQuestions,\n        indexQuestion,\n        timer\n      } = this.state;\n      const {\n        dispatch\n      } = this.props;\n      const {\n        difficulty\n      } = arrayQuestions[indexQuestion];\n      const score = initialScore + timer * points[difficulty];\n      dispatch(userScore(score));\n    };\n    this.shuffleAnswers = () => {\n      const {\n        arrayQuestions,\n        indexQuestion\n      } = this.state;\n      const NUMBER = 0.5;\n      const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers, arrayQuestions[indexQuestion].correct_answer];\n      allAnswers.sort(() => Math.random() - NUMBER);\n      this.setState({\n        arrayAnswers: allAnswers,\n        correctAnswer: arrayQuestions[indexQuestion].correct_answer\n      });\n    };\n    this.handeButtonNext = () => {\n      const {\n        indexQuestion,\n        amountAssert\n      } = this.state;\n      const {\n        history,\n        dispatch\n      } = this.props;\n      const NUMBER = 4;\n      this.setState({\n        indexQuestion: indexQuestion + 1,\n        correct: '',\n        incorrect: '',\n        enabledNextButton: false,\n        timer: 30\n      });\n      if (indexQuestion >= NUMBER) {\n        dispatch(amountHits(amountAssert));\n        history.push('/feedback');\n      } else {\n        this.fetchQuestions();\n      }\n    };\n  }\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n  render() {\n    const {\n      indexQuestion,\n      isLoading,\n      arrayQuestions,\n      enabledNextButton,\n      arrayAnswers,\n      correctAnswer,\n      correct,\n      incorrect,\n      enabledAnswersButton,\n      timer\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"questions-container\",\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 24\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"questions-box\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timer-box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"timer\",\n            children: timer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this), !enabledNextButton && /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Ainda da tempo!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 39\n          }, this), enabledNextButton && /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handeButtonNext,\n            \"data-testid\": \"btn-next\",\n            type: \"button\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          \"data-testid\": \"answer-options\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"category\",\n            \"data-testid\": \"question-category\",\n            children: arrayQuestions[indexQuestion].category\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            \"data-testid\": \"question-text\",\n            children: arrayQuestions[indexQuestion].question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }, this), arrayAnswers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            disabled: !enabledAnswersButton,\n            onClick: this.handleButtonOptions,\n            className: answer === correctAnswer ? `${correct}` : `${incorrect}`,\n            \"data-testid\": answer === correctAnswer ? 'correct-answer' : `wrong-answer-${index}`,\n            children: answer\n          }, answer, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 19\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuestions.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func\n  })\n}.isRequired;\nexport default connect()(Questions);","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchQuestionsApi","amountHits","userScore","intervalId","initialScore","points","hard","medium","easy","Questions","state","indexQuestion","amountAssert","arrayQuestions","arrayAnswers","isLoading","correctAnswer","correct","incorrect","enabledNextButton","enabledAnswersButton","timer","timerDisplay","RESTART","setInterval","setState","clearInterval","fetchQuestions","history","props","token","localStorage","getItem","data","NUMBER","response_code","removeItem","push","results","shuffleAnswers","handleButtonOptions","target","isCorrect","getAttribute","includes","countScore","dispatch","difficulty","score","allAnswers","incorrect_answers","correct_answer","sort","Math","random","handeButtonNext","componentDidMount","render","category","question","map","answer","index","propTypes","func","shape","isRequired"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { connect } from 'react-redux';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport '../styles/Questions.css';\nimport { amountHits, userScore } from '../redux/actions/gameAction';\n\nlet intervalId = 0;\nconst initialScore = 10;\nconst points = {\n  hard: 3,\n  medium: 2,\n  easy: 1,\n};\n\nclass Questions extends Component {\n  state = {\n    indexQuestion: 0,\n    amountAssert: 0,\n    arrayQuestions: [],\n    arrayAnswers: [],\n    isLoading: true,\n    correctAnswer: '',\n    correct: false,\n    incorrect: false,\n    enabledNextButton: false,\n    enabledAnswersButton: true,\n    timer: 30,\n  };\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  timerDisplay = () => {\n    const RESTART = 1000;\n    intervalId = setInterval(() => {\n      let { timer } = this.state;\n      if (timer > 0) {\n        this.setState({\n          timer: timer -= 1,\n        });\n      } else {\n        clearInterval(intervalId);\n        this.setState({\n          enabledAnswersButton: false,\n        });\n      }\n    }, RESTART);\n  };\n\n  fetchQuestions = async () => {\n    this.timerDisplay();\n    const { history } = this.props;\n    const token = localStorage.getItem('token');\n    const data = await fetchQuestionsApi(token);\n    const NUMBER = 3;\n\n    if (data.response_code === NUMBER) {\n      localStorage.removeItem('token');\n      history.push('/');\n    } else {\n      this.setState({\n        isLoading: false,\n        arrayQuestions: data.results,\n      }, this.shuffleAnswers);\n    }\n  };\n\n  handleButtonOptions = ({ target }) => {\n    const { amountAssert } = this.state;\n\n    const isCorrect = target.getAttribute('data-testid').includes('correct-answer');\n\n    if (isCorrect) {\n      this.setState({\n        correct: 'correct',\n        incorrect: 'incorrect',\n        enabledNextButton: true,\n        amountAssert: amountAssert + 1,\n      }, this.countScore());\n    } else {\n      this.setState({\n        correct: 'correct',\n        incorrect: 'incorrect',\n        enabledNextButton: true,\n      });\n    }\n    clearInterval(intervalId);\n  };\n\n  countScore = () => {\n    const { arrayQuestions, indexQuestion, timer } = this.state;\n    const { dispatch } = this.props;\n    const { difficulty } = arrayQuestions[indexQuestion];\n    const score = initialScore + (timer * points[difficulty]);\n    dispatch(userScore(score));\n  };\n\n  shuffleAnswers = () => {\n    const { arrayQuestions, indexQuestion } = this.state;\n    const NUMBER = 0.5;\n    const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers,\n      arrayQuestions[indexQuestion].correct_answer];\n    allAnswers.sort(() => Math.random() - NUMBER);\n    this.setState({\n      arrayAnswers: allAnswers,\n      correctAnswer: arrayQuestions[indexQuestion].correct_answer,\n    });\n  };\n\n  handeButtonNext = () => {\n    const { indexQuestion, amountAssert } = this.state;\n    const { history, dispatch } = this.props;\n    const NUMBER = 4;\n\n    this.setState({\n      indexQuestion: indexQuestion + 1,\n      correct: '',\n      incorrect: '',\n      enabledNextButton: false,\n      timer: 30,\n    });\n\n    if (indexQuestion >= NUMBER) {\n      dispatch(amountHits(amountAssert));\n      history.push('/feedback');\n    } else {\n      this.fetchQuestions();\n    }\n  };\n\n  render() {\n    const { indexQuestion, isLoading, arrayQuestions, enabledNextButton,\n      arrayAnswers, correctAnswer, correct, incorrect,\n      enabledAnswersButton, timer } = this.state;\n    return (\n      <section className=\"questions-container\">\n        { isLoading && <p>Carregando...</p> }\n        { !isLoading && (\n          <div className=\"questions-box\">\n            <div className=\"timer-box\">\n              <h1 className=\"timer\">{ timer }</h1>\n              { !enabledNextButton && <h3>Ainda da tempo!</h3> }\n              {\n                enabledNextButton && (\n                  <button\n                    onClick={ this.handeButtonNext }\n                    data-testid=\"btn-next\"\n                    type=\"button\"\n                  >\n                    Next\n\n                  </button>)\n              }\n            </div>\n            <div data-testid=\"answer-options\">\n              <h1 className=\"category\" data-testid=\"question-category\">\n                {arrayQuestions[indexQuestion].category }\n              </h1>\n              <h3 data-testid=\"question-text\">{arrayQuestions[indexQuestion].question }</h3>\n              {\n                arrayAnswers.map((answer, index) => (\n                  <button\n                    type=\"button\"\n                    disabled={ !enabledAnswersButton }\n                    onClick={ this.handleButtonOptions }\n                    className={ answer === correctAnswer ? `${correct}`\n                      : `${incorrect}` }\n                    data-testid={ answer === correctAnswer ? 'correct-answer'\n                      : `wrong-answer-${index}` }\n                    key={ answer }\n                  >\n                    {answer}\n                  </button>))\n              }\n            </div>\n          </div>) }\n      </section>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  dispatch: PropTypes.func,\n  history: PropTypes.shape({\n    push: PropTypes.func,\n  }),\n}.isRequired;\n\nexport default connect()(Questions);\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}