{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Questions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // isCorrect: false,\n      indexQuestion: 0,\n      arrayAnswers: []\n    };\n  }\n  componentDidMount() {\n    const {\n      questions\n    } = this.props;\n    const {\n      indexQuestion\n    } = this.state;\n    const correctAnswer = questions[indexQuestion].correct_answer;\n    const arrayAnswers = [...questions[indexQuestion].incorrect_answers, correctAnswer];\n    console.log(questions);\n    // this.setState({\n    //   arrayAnswers:\n    // })\n  }\n\n  render() {\n    const {\n      questions\n    } = this.props;\n    const {\n      indexQuestion\n    } = this.state;\n    if (questions.length !== 0) {\n      const correctAnswer = questions[indexQuestion].correct_answer;\n      const arrayAnswers = [...questions[indexQuestion].incorrect_answers, correctAnswer];\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: questions.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: questions[indexQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 15\n        }, this), [...questions[indexQuestion].incorrect_answers, questions[indexQuestion].correct_answer].map((answer, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n          children: answer\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuestions.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n}.isRequired;\nconst mapStateToProps = state => ({\n  ...state.player\n});\nexport default connect(mapStateToProps)(Questions);","map":{"version":3,"names":["React","Component","PropTypes","connect","Questions","state","indexQuestion","arrayAnswers","componentDidMount","questions","props","correctAnswer","correct_answer","incorrect_answers","console","log","render","length","question","map","answer","index","propTypes","arrayOf","shape","isRequired","mapStateToProps","player"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nclass Questions extends Component {\n  state = {\n    // isCorrect: false,\n    indexQuestion: 0,\n    arrayAnswers: [],\n  };\n\n  componentDidMount() {\n    const { questions } = this.props;\n    const { indexQuestion } = this.state;\n    const correctAnswer = questions[indexQuestion].correct_answer;\n    const arrayAnswers = [...questions[indexQuestion].incorrect_answers, correctAnswer];\n    console.log(questions);\n    // this.setState({\n    //   arrayAnswers:\n    // })\n  }\n\n  render() {\n    const { questions } = this.props;\n    const { indexQuestion } = this.state;\n    if (questions.length !== 0) {\n      const correctAnswer = questions[indexQuestion].correct_answer;\n      const arrayAnswers = [...questions[indexQuestion].incorrect_answers, correctAnswer];\n    }\n    return (\n      <div>\n        { (questions.length === 0) ? <p>Carregando...</p>\n          : (\n            <div>\n              <h1>{ questions[indexQuestion].question }</h1>\n              { [...questions[indexQuestion].incorrect_answers,\n                questions[indexQuestion].correct_answer].map((answer, index) => (\n                  <button key={ index }>{answer}</button>\n              )) }\n            </div>\n          ) }\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  questions: PropTypes.arrayOf(\n    PropTypes.shape({}),\n  ).isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  ...state.player,\n});\n\nexport default connect(mapStateToProps)(Questions);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AAAC;AAEtC,MAAMC,SAAS,SAASH,SAAS,CAAC;EAAA;IAAA;IAAA,KAChCI,KAAK,GAAG;MACN;MACAC,aAAa,EAAE,CAAC;MAChBC,YAAY,EAAE;IAChB,CAAC;EAAA;EAEDC,iBAAiB,GAAG;IAClB,MAAM;MAAEC;IAAU,CAAC,GAAG,IAAI,CAACC,KAAK;IAChC,MAAM;MAAEJ;IAAc,CAAC,GAAG,IAAI,CAACD,KAAK;IACpC,MAAMM,aAAa,GAAGF,SAAS,CAACH,aAAa,CAAC,CAACM,cAAc;IAC7D,MAAML,YAAY,GAAG,CAAC,GAAGE,SAAS,CAACH,aAAa,CAAC,CAACO,iBAAiB,EAAEF,aAAa,CAAC;IACnFG,OAAO,CAACC,GAAG,CAACN,SAAS,CAAC;IACtB;IACA;IACA;EACF;;EAEAO,MAAM,GAAG;IACP,MAAM;MAAEP;IAAU,CAAC,GAAG,IAAI,CAACC,KAAK;IAChC,MAAM;MAAEJ;IAAc,CAAC,GAAG,IAAI,CAACD,KAAK;IACpC,IAAII,SAAS,CAACQ,MAAM,KAAK,CAAC,EAAE;MAC1B,MAAMN,aAAa,GAAGF,SAAS,CAACH,aAAa,CAAC,CAACM,cAAc;MAC7D,MAAML,YAAY,GAAG,CAAC,GAAGE,SAAS,CAACH,aAAa,CAAC,CAACO,iBAAiB,EAAEF,aAAa,CAAC;IACrF;IACA,oBACE;MAAA,UACKF,SAAS,CAACQ,MAAM,KAAK,CAAC,gBAAI;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI,gBAE7C;QAAA,wBACE;UAAA,UAAMR,SAAS,CAACH,aAAa,CAAC,CAACY;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAO,EAC5C,CAAC,GAAGT,SAAS,CAACH,aAAa,CAAC,CAACO,iBAAiB,EAC9CJ,SAAS,CAACH,aAAa,CAAC,CAACM,cAAc,CAAC,CAACO,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzD;UAAA,UAAuBD;QAAM,GAAfC,KAAK;UAAA;UAAA;UAAA;QAAA,QACtB,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA;IAEL;MAAA;MAAA;MAAA;IAAA,QACC;EAEV;AACF;AAEAjB,SAAS,CAACkB,SAAS,GAAG;EACpBb,SAAS,EAAEP,SAAS,CAACqB,OAAO,CAC1BrB,SAAS,CAACsB,KAAK,CAAC,CAAC,CAAC,CAAC,CACpB,CAACC;AACJ,CAAC,CAACA,UAAU;AAEZ,MAAMC,eAAe,GAAIrB,KAAK,KAAM;EAClC,GAAGA,KAAK,CAACsB;AACX,CAAC,CAAC;AAEF,eAAexB,OAAO,CAACuB,eAAe,CAAC,CAACtB,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}