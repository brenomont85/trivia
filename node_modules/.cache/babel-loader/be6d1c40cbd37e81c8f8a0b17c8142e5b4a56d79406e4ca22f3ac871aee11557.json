{"ast":null,"code":"var _jsxFileName = \"/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Questions extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      // isCorrect: false,\n      indexQuestion: 0,\n      arrayQuestions: [],\n      arrayAnswers: [],\n      isLoading: true,\n      correctAnswer: ''\n    };\n    this.fetchQuestions = async () => {\n      const token = localStorage.getItem('token');\n      const data = await fetchQuestionsApi(token);\n      this.setState({\n        isLoading: false,\n        arrayQuestions: data\n      }, this.shuffleAnswers);\n    };\n    this.shuffleAnswers = () => {\n      const {\n        arrayQuestions,\n        indexQuestion\n      } = this.state;\n      const NUMBER = 0.5;\n      const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers, arrayQuestions[indexQuestion].correct_answer];\n      allAnswers.sort(() => Math.random() - NUMBER);\n      this.setState({\n        arrayAnswers: allAnswers,\n        correctAnswer: arrayQuestions[indexQuestion].correct_answer\n      });\n    };\n  }\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n  render() {\n    const {\n      indexQuestion,\n      isLoading,\n      arrayQuestions,\n      arrayAnswers,\n      correctAnswer\n    } = this.state;\n    console.log(arrayAnswers);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [isLoading && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Carregando...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 24\n      }, this), !isLoading && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: arrayQuestions[indexQuestion].question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), arrayAnswers.map(answer => /*#__PURE__*/_jsxDEV(\"button\", {\n          \"data-testid\": answer === correctAnswer ? 'correct-answer' : `wrong-answer-${index}`,\n          children: answer\n        }, answer, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 45\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  }\n}\nQuestions.propTypes = {\n  questions: PropTypes.arrayOf(PropTypes.shape({})).isRequired\n}.isRequired;\nconst mapStateToProps = state => ({\n  ...state.player\n});\nexport default connect(mapStateToProps)(Questions);","map":{"version":3,"names":["React","Component","PropTypes","connect","fetchQuestionsApi","Questions","state","indexQuestion","arrayQuestions","arrayAnswers","isLoading","correctAnswer","fetchQuestions","token","localStorage","getItem","data","setState","shuffleAnswers","NUMBER","allAnswers","incorrect_answers","correct_answer","sort","Math","random","componentDidMount","render","console","log","question","map","answer","index","propTypes","questions","arrayOf","shape","isRequired","mapStateToProps","player"],"sources":["/home/clecio/Trybe/Projetos/sd-029-b-project-trivia-react-redux/src/components/Questions.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { fetchQuestionsApi } from '../services/fetchAPI';\n\nclass Questions extends Component {\n  state = {\n    // isCorrect: false,\n    indexQuestion: 0,\n    arrayQuestions: [],\n    arrayAnswers: [],\n    isLoading: true,\n    correctAnswer: '',\n  };\n\n  componentDidMount() {\n    this.fetchQuestions();\n  }\n\n  fetchQuestions = async () => {\n    const token = localStorage.getItem('token');\n    const data = await fetchQuestionsApi(token);\n    this.setState({\n      isLoading: false,\n      arrayQuestions: data,\n    }, this.shuffleAnswers);\n  };\n\n  shuffleAnswers = () => {\n    const { arrayQuestions, indexQuestion } = this.state;\n    const NUMBER = 0.5;\n    const allAnswers = [...arrayQuestions[indexQuestion].incorrect_answers,\n      arrayQuestions[indexQuestion].correct_answer];\n    allAnswers.sort(() => Math.random() - NUMBER);\n    this.setState({\n      arrayAnswers: allAnswers,\n      correctAnswer: arrayQuestions[indexQuestion].correct_answer,\n    });\n  };\n\n  render() {\n    const { indexQuestion, isLoading, arrayQuestions, arrayAnswers, correctAnswer } = this.state;\n    console.log(arrayAnswers);\n    return (\n      <div>\n        {/* { (isLoading) ? <p>Carregando...</p>\n          : <p>{arrayQuestions[indexQuestion].question }</p> } */}\n\n        { isLoading && <p>Carregando...</p> }\n        { !isLoading && (\n          <div>\n            <p>{arrayQuestions[indexQuestion].question }</p>\n            {\n              arrayAnswers.map((answer) => (<button\n                data-testid={ answer === correctAnswer ? 'correct-answer'\n                  : `wrong-answer-${index}` }\n                key={ answer }\n              >\n                {answer}\n              </button>))\n            }\n          </div>) }\n      </div>\n    );\n  }\n}\n\nQuestions.propTypes = {\n  questions: PropTypes.arrayOf(\n    PropTypes.shape({}),\n  ).isRequired,\n}.isRequired;\n\nconst mapStateToProps = (state) => ({\n  ...state.player,\n});\n\nexport default connect(mapStateToProps)(Questions);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,SAASC,iBAAiB,QAAQ,sBAAsB;AAAC;AAEzD,MAAMC,SAAS,SAASJ,SAAS,CAAC;EAAA;IAAA;IAAA,KAChCK,KAAK,GAAG;MACN;MACAC,aAAa,EAAE,CAAC;MAChBC,cAAc,EAAE,EAAE;MAClBC,YAAY,EAAE,EAAE;MAChBC,SAAS,EAAE,IAAI;MACfC,aAAa,EAAE;IACjB,CAAC;IAAA,KAMDC,cAAc,GAAG,YAAY;MAC3B,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMZ,iBAAiB,CAACS,KAAK,CAAC;MAC3C,IAAI,CAACI,QAAQ,CAAC;QACZP,SAAS,EAAE,KAAK;QAChBF,cAAc,EAAEQ;MAClB,CAAC,EAAE,IAAI,CAACE,cAAc,CAAC;IACzB,CAAC;IAAA,KAEDA,cAAc,GAAG,MAAM;MACrB,MAAM;QAAEV,cAAc;QAAED;MAAc,CAAC,GAAG,IAAI,CAACD,KAAK;MACpD,MAAMa,MAAM,GAAG,GAAG;MAClB,MAAMC,UAAU,GAAG,CAAC,GAAGZ,cAAc,CAACD,aAAa,CAAC,CAACc,iBAAiB,EACpEb,cAAc,CAACD,aAAa,CAAC,CAACe,cAAc,CAAC;MAC/CF,UAAU,CAACG,IAAI,CAAC,MAAMC,IAAI,CAACC,MAAM,EAAE,GAAGN,MAAM,CAAC;MAC7C,IAAI,CAACF,QAAQ,CAAC;QACZR,YAAY,EAAEW,UAAU;QACxBT,aAAa,EAAEH,cAAc,CAACD,aAAa,CAAC,CAACe;MAC/C,CAAC,CAAC;IACJ,CAAC;EAAA;EAvBDI,iBAAiB,GAAG;IAClB,IAAI,CAACd,cAAc,EAAE;EACvB;EAuBAe,MAAM,GAAG;IACP,MAAM;MAAEpB,aAAa;MAAEG,SAAS;MAAEF,cAAc;MAAEC,YAAY;MAAEE;IAAc,CAAC,GAAG,IAAI,CAACL,KAAK;IAC5FsB,OAAO,CAACC,GAAG,CAACpB,YAAY,CAAC;IACzB,oBACE;MAAA,WAIIC,SAAS,iBAAI;QAAA,UAAG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAI,EACjC,CAACA,SAAS,iBACV;QAAA,wBACE;UAAA,UAAIF,cAAc,CAACD,aAAa,CAAC,CAACuB;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,EAE9CrB,YAAY,CAACsB,GAAG,CAAEC,MAAM,iBAAM;UAC5B,eAAcA,MAAM,KAAKrB,aAAa,GAAG,gBAAgB,GACpD,gBAAesB,KAAM,EAAG;UAAA,UAG5BD;QAAM,GAFDA,MAAM;UAAA;UAAA;UAAA;QAAA,QAGJ,CAAC;MAAA;QAAA;QAAA;QAAA;MAAA,QAER;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV;AACF;AAEA3B,SAAS,CAAC6B,SAAS,GAAG;EACpBC,SAAS,EAAEjC,SAAS,CAACkC,OAAO,CAC1BlC,SAAS,CAACmC,KAAK,CAAC,CAAC,CAAC,CAAC,CACpB,CAACC;AACJ,CAAC,CAACA,UAAU;AAEZ,MAAMC,eAAe,GAAIjC,KAAK,KAAM;EAClC,GAAGA,KAAK,CAACkC;AACX,CAAC,CAAC;AAEF,eAAerC,OAAO,CAACoC,eAAe,CAAC,CAAClC,SAAS,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}